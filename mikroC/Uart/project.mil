_main:
  begin   (midx: 0)
//project.c,3 :: 		void main() {
_main:
  begin   (midx: 0)
//project.c,7 :: 		Uart1_Init(9600);
	W10 <2> <- PUSH(W10)   (midx: 0)
	W11 <2> <- PUSH(W11)   (midx: 0)
	W10 <4> <- 9600   (midx: 0)
	CALL _UART1_Init   (midx: 0)
//project.c,8 :: 		Delay_ms(100);                  // Wait for UART module to stabilize
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 2)
	asm: -1   (midx: 1)
	asm: -1   (midx: 5)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 5)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
//project.c,10 :: 		rx1 = Uart1_Read();          // perform dummy read to clear the register
	CALL _UART1_Read   (midx: 0)
	W1 <2> <- addr(_rx1)   (midx: 0)
	[W1] <1> <- W0   (midx: 0)
//project.c,12 :: 		Uart1_Write('s');            // signal start
	W10 <2> <- 115   (midx: 0)
	CALL _UART1_Write   (midx: 0)
//project.c,14 :: 		while(1)
1:   (midx: 0)
//project.c,16 :: 		if(Uart1_Data_Ready())
	CALL _UART1_Data_Ready   (midx: 0)
	if (!W0) then goto 3   (midx: 0)
//project.c,18 :: 		rx1=Uart1_Read();
	CALL _UART1_Read   (midx: 0)
	W1 <2> <- addr(_rx1)   (midx: 0)
	[W1] <1> <- W0   (midx: 0)
//project.c,20 :: 		Uart1_Write(rx1);
	W10 <2> <- W0   (midx: 0)
	CALL _UART1_Write   (midx: 0)
//project.c,21 :: 		}
3:   (midx: 0)
//project.c,22 :: 		}
	goto	1   (midx: 0)
  end
   (midx: 0)
